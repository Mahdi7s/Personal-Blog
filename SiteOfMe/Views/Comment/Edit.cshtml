@model SiteOfMe.Models.Comment
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset style="margin: 5px; padding: 5px;">
        <legend>Comment</legend>

        @Html.HiddenFor(model => model.CommentId)
        @Html.HiddenFor(model => model.AnonymousUserId)
        @Html.HiddenFor(model => model.Body.BigStringId)

        <div class="editor-label">
            @Html.LabelFor(model => model.AnonymousUserId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AnonymousUserId)
            @Html.ValidationMessageFor(model => model.AnonymousUserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PostId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PostId)
            @Html.ValidationMessageFor(model => model.PostId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AnonymousUser.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AnonymousUser.Name)
            @Html.ValidationMessageFor(model => model.AnonymousUser.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReplyId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReplyId)
            @Html.ValidationMessageFor(model => model.ReplyId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Title, new { @style = "width=60%" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AnonymousUser.Website)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.AnonymousUser.Website, new { @style = "width=60%" })
            @Html.ValidationMessageFor(model => model.AnonymousUser.Website)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsReply)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsReply)
            @Html.ValidationMessageFor(model => model.IsReply)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsVisible)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsVisible)
            @Html.ValidationMessageFor(model => model.IsVisible)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PublishDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PublishDate)
            @Html.ValidationMessageFor(model => model.PublishDate)
        </div>

        <div class="editor-label">
            @Html.Label("Comment Text")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Body.Value, new { @style = "width:60%;height:90px;" })
            @Html.ValidationMessageFor(model => model.Body.Value)
        </div>

        <p>
            <input type="submit" class="button" value="Save" />
        </p>
    </fieldset>
}

